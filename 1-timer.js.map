{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI(convertMs(0));\n      datetimePicker.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimerUI(time);\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["datetimePicker","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","diff","updateTimerUI","convertMs","time","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"+IAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,SAAW,GAEpB,IAAIK,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAS,SAAW,KAEpBK,EAAmBI,EACnBT,EAAS,SAAW,GAEvB,CACH,EAEAW,EAAUZ,EAAgBQ,CAAO,EAEjCP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAe,SAAW,GAE1BO,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAcC,EAAU,CAAC,CAAC,EAC1Bf,EAAe,SAAW,GAC1BC,EAAS,SAAW,GACpB,MACD,CAED,MAAMe,EAAOD,EAAUF,CAAI,EAC3BC,EAAcE,CAAI,CACnB,EAAE,GAAI,CACT,CAAC,EAED,SAASF,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDlB,EAAO,YAAce,EACrBd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,CAEA,SAASL,EAAUO,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}